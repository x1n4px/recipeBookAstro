---
export function getStaticPaths() {
  return [
    {params: {type: 'Desayunos'}},
    {params: {type: 'Postres'}},
    {params: {type: 'Almuerzo'}},
    {params: {type: 'Salsas, Dips'}},
    {params: {type: 'Bebidas'}},
    {params: {type: 'Platillos principales'}},
    {params: {type: 'Cena'}},
    {params: {type: 'Sandwiches'}},
    {params: {type: 'Ensaladas'}},
    {params: {type: 'Sopas'}},

  ];
}

import Navbar from '../../components/navbar.astro';
const { type } = Astro.params;

import { turso } from '../../turso';

async function getRecipes() {
  try {
    const { rows: typeRows } = await turso.execute(`SELECT * FROM type WHERE name = '${type}'`);

    if (typeRows.length === 0) {
      throw new Error('Type not found');
    }

    const typeId = typeRows[0].id;
    const { rows: recipeRows } = await turso.execute(`SELECT r.* FROM recipe r INNER JOIN recipe_type tr ON tr.recipe_id = r.id WHERE tr.type_id = ${typeId}`);

    return recipeRows;
  } catch (error) {
    console.error('Error fetching recipes:', error);
    return []; // Handle error gracefully, e.g., return an empty array
  }
}

const recipes = await getRecipes();

---
 <Navbar />

 
<section class="text-gray-600 body-font">
  <div class="container px-5 py-24 mx-auto">
    {recipes.map((recipe) => (
    <div class="flex items-center lg:w-4/5 mx-auto border-b pb-10 mb-10 border-gray-200 sm:flex-row flex-col">
      <div class="flex-grow sm:text-left text-center mt-6 sm:mt-0">
        <h2 class="text-gray-900 text-lg title-font font-medium mb-2">{ recipe.name }</h2>
        <a  href={`/recipe/${recipe.id}`}   class="mt-3 text-lime-700 inline-flex items-center">
          <span>Ver receta completa</span>
          <svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-4 h-4 ml-2" viewBox="0 0 24 24">
            <path d="M5 12h14M12 5l7 7-7 7"></path>
          </svg>
        </a>

      </div>

    </div>
    ))}
  
  </div>
</section>